<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lili.provider.mapper.ProcessinstanceMapper">

    <select id="getProcesstaskdeatilList" parameterType="String" resultType="com.lili.provider.entity.process.Processtaskdeatil">
        select * from Processtaskdeatil a where a.procinstanceid = #{instanceid,jdbcType=VARCHAR} and taskid is not null;
    </select>

    <select id="getProcessinstance" parameterType="String" resultType="com.lili.provider.entity.Processinstance">
        select * from Processinstance a where a.procinstanceid = #{instanceid,jdbcType=VARCHAR} ;
    </select>

    <select id="getProcesspermissionsrc" parameterType="String" resultType="com.lili.provider.entity.Processpermissionsrc">
        SELECT T
        .*,
        (
        SELECT
        string_agg ( A.permition, ';' ORDER BY A.ID )
        FROM
        processpermissionsrc A
        WHERE
        A.parentid = CAST ( T.ID AS VARCHAR )
        ) AS operate
        FROM
        processpermissionsrc T
        WHERE
        T.parentid = CAST ( ( SELECT parentid FROM processpermissionsrc WHERE permition = #{defkey} ) AS VARCHAR )
        and T.priority &lt; CAST ( ( SELECT priority FROM processpermissionsrc WHERE permition = #{defkey} ) AS int )
        ORDER BY
        T.priority
    </select>

    <select id="getNextProcesspermissionsrclist" parameterType="String" resultType="com.lili.provider.entity.Processpermissionsrc">
        SELECT T
        .*,
        (
        SELECT
        string_agg ( A.permition, ';' ORDER BY A.ID )
        FROM
        processpermissionsrc A
        WHERE
        A.parentid = CAST ( T.ID AS VARCHAR )
        ) AS operate
        FROM
        processpermissionsrc T
        WHERE
        T.parentid = CAST ( ( SELECT id FROM processpermissionsrc WHERE permition = #{defkey} ) AS VARCHAR )
        ORDER BY
        T.priority
    </select>

    <select id="getProcesstaskdeatillist"  resultType="int">
       select count(1) from Processtaskdeatil a
       ${ew.customSqlSegment}
    </select>

    <select id="getbatchlist"  resultType="java.util.HashMap">
       select * from batchexcinfo a limit #{pageSize, jdbcType=INTEGER} offset

        <choose>
            <when test="currentPage != null and currentPage == 1">
                0
            </when>
            <otherwise>
               ( #{currentPage, jdbcType=INTEGER} - 1)
            </otherwise>
        </choose>
        * #{pageSize, jdbcType=INTEGER}
    </select>


    <insert id="savebatchlist"  parameterType="map">

        insert into batchexcinfo(

            #{columnname,jdbcType=VARCHAR}
            )

        values
           (
            #{value,jdbcType=VARCHAR}
           )

    </insert>

    <insert id="deletebatch" parameterType="string">
        delete from batchexcinfo where jobcode = #{jobcode ,jdbcType=VARCHAR}
    </insert>



    <insert id="savelog"  >

        insert into batchlog(
            dealdatestr,content,dealdate,times
            )

        VALUES
        <foreach collection ="list" item="list" index="index" separator =",">
            (#{list.dealdatestr ,jdbcType=VARCHAR}, #{list.content ,jdbcType=VARCHAR},#{list.dealdate,jdbcType=TIMESTAMP },#{list.times})
        </foreach >

    </insert>
</mapper>
